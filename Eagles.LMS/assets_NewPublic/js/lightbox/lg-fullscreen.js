/**!
 * lg-fullscreen.js | 1.2.0 | May 20th 2020
 * http://sachinchoolur.github.io/lg-fullscreen.js
 * Copyright (c) 2016 Sachin N; 
 * @license GPLv3 
 */ !function (e) { if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else { var l; (l = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).LgFullscreen = e() } }(function () { var e; return (function () { function e(l, n, t) { function r(c, s) { if (!n[c]) { if (!l[c]) { var o = "function" == typeof require && require; if (!s && o) return o(c, !0); if (u) return u(c, !0); var i = Error("Cannot find module '" + c + "'"); throw i.code = "MODULE_NOT_FOUND", i } var f = n[c] = { exports: {} }; l[c][0].call(f.exports, function (e) { return r(l[c][1][e] || e) }, f, f.exports, e, l, n, t) } return n[c].exports } for (var u = "function" == typeof require && require, c = 0; c < t.length; c++)r(t[c]); return r } return e })()({ 1: [function (l, n, t) { var r, u; r = this, u = function () { "use strict"; var e = Object.assign || function (e) { for (var l = 1; l < arguments.length; l++) { var n = arguments[l]; for (var t in n) Object.prototype.hasOwnProperty.call(n, t) && (e[t] = n[t]) } return e }, l = { fullScreen: !0 }; function n() { return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement } var t = function n(t) { return this.el = t, this.core = window.lgData[this.el.getAttribute("lg-uid")], this.core.s = e({}, l, this.core.s), this.init(), this }; t.prototype.init = function () { var e = ""; if (this.core.s.fullScreen) { if (!document.fullscreenEnabled && !document.webkitFullscreenEnabled && !document.mozFullScreenEnabled && !document.msFullscreenEnabled) return; e = '<button aria-label="Toggle fullscreen" class="lg-fullscreen lg-icon"></button>', this.core.outer.querySelector(".lg-toolbar").insertAdjacentHTML("beforeend", e), this.fullScreen() } }, t.prototype.requestFullscreen = function () { var e = document.documentElement; e.requestFullscreen ? e.requestFullscreen() : e.msRequestFullscreen ? e.msRequestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen && e.webkitRequestFullscreen() }, t.prototype.exitFullscreen = function () { document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen() }, t.prototype.fullScreen = function () { var e = this; utils.on(document, "fullscreenchange.lgfullscreen webkitfullscreenchange.lgfullscreen mozfullscreenchange.lgfullscreen MSFullscreenChange.lgfullscreen", function () { utils.hasClass(e.core.outer, "lg-fullscreen-on") ? utils.removeClass(e.core.outer, "lg-fullscreen-on") : utils.addClass(e.core.outer, "lg-fullscreen-on") }), utils.on(this.core.outer.querySelector(".lg-fullscreen"), "click.lg", function () { n() ? e.exitFullscreen() : e.requestFullscreen() }) }, t.prototype.destroy = function () { n() && this.exitFullscreen(), utils.off(document, ".lgfullscreen") }, window.lgModules.fullscreen = t }, "function" == typeof e && e.amd ? e([], u) : void 0 !== t ? u() : (u(), r.lgFullscreen = {}) }, {}] }, {}, [1])(1) });